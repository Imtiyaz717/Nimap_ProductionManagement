@model MachineTest1.Models.ProductMaster

@{
    ViewBag.Title = "UpdateProduct";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: aliceblue
        }

        h2 {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-style: oblique;
            color: black
        }

        .container {
            padding: 20px;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <hr />
    @if (ViewBag.Exception != null)
            {
                <div class="alert alert-danger">
                    <b>An error occur while updating data is :</b>@ViewBag.Exception
                </div>
            }
    <hr />
    @{
        var nf = ViewBag.NFdata as string;


    }
    @if (!string.IsNullOrEmpty(nf))
    {
        <div class="alert alert-danger">
            @nf
        </div>
    }
    <hr />
    <div>
        @if (ViewBag.except != null)
        {
            <div class="alert alert-danger">
                <b>An error is : </b>@ViewBag.except
            </div>
        }
    </div>
    <hr />
    @{
        var modelstst = ViewBag.Model as string;


    }
    @if (!string.IsNullOrEmpty(modelstst))
    {
        <div class="alert alert-danger" >
            @modelstst
        </div>
    }
    <h2>Update Product</h2>


    @using (Html.BeginForm("UpdateProduct", "Product", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductId)

            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.CategoryId, new SelectList(ViewBag.list, "CategoryId", "CategoryName"), "Select Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        <a href="@Url.Action("ProductList","Product")"><span class="glyphicon glyphicon-fast-backward" style="font-size:25px"></span></a>


    </div>
</body>
</html>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
